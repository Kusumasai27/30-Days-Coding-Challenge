Q. Given the root of a binary tree, return the level order traversal of its nodes' values. (i.e., from left to right, level by level).

Example 1:
Input: root = [3,9,20,null,null,15,7]
Output: [[3],[9,20],[15,7]]

Example 2:
Input: root = [1]
Output: [[1]]

Example 3:
Input: root = []
Output: []

Code:

class Solution:
    def levelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:
        l1=[]
        p=deque()
        p.append(root)
        while p:
            n=[]
            for i in range(len(p)):
                poping=p.popleft()
                if poping:
                    n.append(poping.val)
                    p.append(poping.left)
                    p.append(poping.right)
            if n:
                l1.append(n)
        return l1
   
